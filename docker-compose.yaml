networks:
  ps_core:

services:
  server:
    image: 'nginx:stable-alpine'
    #ulimits:
      #nofile:
        #soft: 1048576
        #hard: 1048576
    #deploy:
      #resources:
        #limits:
          #cpus: '1'
          #memory: '2G'
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - 8081:80
      # - 443:443
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - postgres
    container_name: ps_core_server
    networks:
      - ps_core
    #extra_hosts:
     #- "host.docker.internal:host-gateway"
  postgres:
    image: postgres:15.3-alpine
    container_name: postgres_core
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=pwd
    ports:
      - "5432:5432"
    volumes:
      #- ./data/postgres:/var/lib/postgresql/data
      - /opt/postgres_data:/var/lib/postgresql/data
    networks:
      - ps_core

    #volumes:
      #- /opt/pg_data:/var/lib/postgres
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_core
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: user@localhost.com
      PGADMIN_DEFAULT_PASSWORD: password
    user: '$UID:$GID'
    ports:
      - 8888:80
    volumes:
      #- ./data/pgadmin:/var/lib/pgadmin
      - /opt/pgadmin_data:/var/lib/pgadmin
    networks:
      - ps_core
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    container_name: php_ps_core
    networks:
      - ps_core
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      - ps_core
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    #depends_on:
    networks:
      - ps_core
